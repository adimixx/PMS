@model PMS.Models.CreatePackageViewModel

@{
    ViewBag.Title = "EditPackage";
    Layout = "~/Views/Shared/_LayoutStudioManage.cshtml";
}

<h2>Edit Package</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="card">
        <div class="card-body">
            <h4 class="card-title">Package Form</h4>
            <hr />
            <div class="row">
                <div class="col-sm-12 col-md-8 ">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.depoprice, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.depoprice, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.depoprice, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.details, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.details, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.details, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.studioid, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.studioid, Model.studio, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.studioid, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
                <div class="col-sm-12 col-md-4 text-center">
                    <label class="font-weight-bold">Package Pictures</label>
                    <div style=" overflow-y: scroll;" class="w-100">
                        <div id="ProfilePic-Input" class="w-100 bg-soft-dark" style="height: 600px;">
                            <input type="file" id="input-profilepic" class="filepond" name="filepond" accept="" multiple />
                        </div>
                    </div>
                   
                    <div class="form-group m-3">
                        <button type="button" class="btn btn-primary" id="uploadPhotoBtn">Save Profile Photo</button>
                    </div>
                </div>
            </div>         
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "PackageHome")
</div>


@section Scripts{
    <script type="text/javascript">

    const inputElement = document.querySelector('input[type="file"]');
    const pond = FilePond.create(inputElement);

    FilePond.registerPlugin(
        FilePondPluginFileValidateType,
        FilePondPluginImageExifOrientation,
        FilePondPluginImagePreview,
        FilePondPluginImageCrop,
        FilePondPluginImageResize,
        FilePondPluginImageTransform,
        FilePondPluginImageEdit,
        FilePondPluginFilePoster,
        FilePondPluginFileEncode
    );

    FilePond.setOptions({
        server: {
            url: '/SystemAPI/PackageImage',
            process: {
                url: '/Upload',
                headers: {
                    'StudioCredential': @ViewBag.StudioID,
                    'Package': @Model.id
                }
            },
            revert: null,
        }
    });

    var inputPic = FilePond.create(
        document.getElementById('input-profilepic'),
        {
            labelIdle: `Drag & Drop your picture or <span class="filepond--label-action">Browse</span> to Change Profile Picture`,
            allowMultiple: true,
            imagePreviewHeight: 200,
            //stylePanelLayout: 'integrated',
            acceptedFileTypes: ['image/png', 'image/jpeg'],
            allowFileEncode: true,
            instantUpload: false,
            allowProcess: false,
            credits: false
        });

    // Select the file input and use
    // create() to turn it into a pond
    //var inputPic = FilePond.create(
    //    document.getElementById('input-profilepic'),
    //    {
    //        labelIdle: `Drag & Drop your picture or <span class="filepond--label-action">Browse</span> to Change Profile Picture`,
    //        imagePreviewHeight: 200,
    //        stylePanelLayout: 'integrated',
    //        acceptedFileTypes: ['image/png', 'image/jpeg'],
    //        allowFileEncode: true,
    //        instantUpload: false,
    //        allowProcess: false,
    //        maxFiles: 10,
    //        credits: false
    //    });

    $('#uploadPhotoBtn').click(() => {
        if (inputPic.getFile() == null) {
            $.ajax({
                url: '/SystemAPI/Account/DeleteProfilePic',
                method: 'DELETE',
                success: (() => {
                    //location.reload();
                })
            })
        }

        else if (inputPic.getFile().fileSize == undefined) {
            //location.reload();
        }

        else {
            inputPic.processFile().then(() => {
                //location.reload();
            });
        }

    });

    </script>
    
}