@model PMS.Models.CreateStudioViewModel

@{
    ViewBag.Title = "CreateNewStudio";
}

<h2>CreateNewStudio</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>CreateStudioViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedState, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedState, Model.StateList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SelectedState, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedCity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedCity, Model.CityList  , new {  @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SelectedCity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create Studio" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        function loadCity(val) {
            $.ajax(
                {
                    url: `/api/system/getcity?state=${val}`,
                    success: (result) => {

                        var selectCity = $('#SelectedCity');

                        selectCity.find('option').remove().end();

                        if (result.length == 0) {
                            selectCity.attr('disabled', 'disabled');
                        }

                        else {
                            for (var i = 0; i < result.length; i++) {
                                selectCity.append(`<option value="${result[i]}">${result[i]}</option>}`);
                            }
                            selectCity.removeAttr('disabled');
                        }
                      
                    }
                }
            );
        }

        $('#SelectedState').change(() =>
        {
            loadCity($('#SelectedState').val());
        });

    </script>

}
